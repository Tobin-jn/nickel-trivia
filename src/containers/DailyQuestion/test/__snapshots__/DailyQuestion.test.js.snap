// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DailyQuestion should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DailyQuestion
    category="animals"
    currentQuestion={
      Object {
        "answers": Array [],
        "asked": false,
        "category": "Geography",
        "correct_answer": "Washington D.C",
        "id": 1,
        "question": "Which city is the capital of the United States of America?",
      }
    }
    generateNewQuestion={[MockFunction]}
    hasErrored={
      [MockFunction] {
        "calls": Array [
          Array [
            false,
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    questions={
      Object {
        "geography": Array [
          Object {
            "answers": Array [],
            "asked": false,
            "category": "Geography",
            "correct_answer": "Washington D.C",
            "id": 1,
            "question": "Which city is the capital of the United States of America?",
          },
          Object {
            "answers": Array [],
            "asked": false,
            "category": "Geography",
            "correct_answer": "Phoenix",
            "id": 2,
            "question": "What is the capital of the American state of Arizona?",
          },
        ],
      }
    }
    toggleAsked={[MockFunction]}
    updateQuestions={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="header-wrapper"
        >
          <img
            alt="Trivia Jar Logo"
            className="jar-logo"
            src="NickelJar.png"
          />
          <h1
            className="daily-header"
          >
            Question of the Day
          </h1>
          <NavLink
            activeClassName="active"
            aria-current="page"
            to="/triviagame"
          >
            <button
              className="play-game-btn btn"
            >
              Play a game with Grandkids!
            </button>
          </NavLink>
        </div>,
        <Connect(Question) />,
      ],
      "className": "daily-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="Trivia Jar Logo"
              className="jar-logo"
              src="NickelJar.png"
            />,
            <h1
              className="daily-header"
            >
              Question of the Day
            </h1>,
            <NavLink
              activeClassName="active"
              aria-current="page"
              to="/triviagame"
            >
              <button
                className="play-game-btn btn"
              >
                Play a game with Grandkids!
              </button>
            </NavLink>,
          ],
          "className": "header-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "Trivia Jar Logo",
              "className": "jar-logo",
              "src": "NickelJar.png",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Question of the Day",
              "className": "daily-header",
            },
            "ref": null,
            "rendered": "Question of the Day",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": <button
                className="play-game-btn btn"
              >
                Play a game with Grandkids!
              </button>,
              "to": "/triviagame",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Play a game with Grandkids!",
                "className": "play-game-btn btn",
              },
              "ref": null,
              "rendered": "Play a game with Grandkids!",
              "type": "button",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="header-wrapper"
          >
            <img
              alt="Trivia Jar Logo"
              className="jar-logo"
              src="NickelJar.png"
            />
            <h1
              className="daily-header"
            >
              Question of the Day
            </h1>
            <NavLink
              activeClassName="active"
              aria-current="page"
              to="/triviagame"
            >
              <button
                className="play-game-btn btn"
              >
                Play a game with Grandkids!
              </button>
            </NavLink>
          </div>,
          <Connect(Question) />,
        ],
        "className": "daily-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="Trivia Jar Logo"
                className="jar-logo"
                src="NickelJar.png"
              />,
              <h1
                className="daily-header"
              >
                Question of the Day
              </h1>,
              <NavLink
                activeClassName="active"
                aria-current="page"
                to="/triviagame"
              >
                <button
                  className="play-game-btn btn"
                >
                  Play a game with Grandkids!
                </button>
              </NavLink>,
            ],
            "className": "header-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Trivia Jar Logo",
                "className": "jar-logo",
                "src": "NickelJar.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Question of the Day",
                "className": "daily-header",
              },
              "ref": null,
              "rendered": "Question of the Day",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": <button
                  className="play-game-btn btn"
                >
                  Play a game with Grandkids!
                </button>,
                "to": "/triviagame",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Play a game with Grandkids!",
                  "className": "play-game-btn btn",
                },
                "ref": null,
                "rendered": "Play a game with Grandkids!",
                "type": "button",
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
